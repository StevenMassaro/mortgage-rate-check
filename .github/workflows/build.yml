name: ci

on:
  push:
  workflow_dispatch:

jobs:
  docker-test:
    name: Run tests inside docker image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: actions/checkout@v4
      - name: Run tests in docker image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          context: .
          target: test

  maven-build:
    name: Maven build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots clean install -DskipITs
      - name: Save built jar
        uses: actions/cache/save@v3
        with:
          path: |
            target
          key: built-jar-${{ github.run_number }}-${{ github.run_attempt }}

  docker-build:
    name: Build and push docker image
    runs-on: ubuntu-latest
    needs:
      - docker-test
      - maven-build
    timeout-minutes: 10
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v4
      - name: Restore built jar
        uses: actions/cache/restore@v3
        with:
          path: |
            target
          key: built-jar-${{ github.run_number }}-${{ github.run_attempt }}
      - name: Push README to Dockerhub
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKERHUB_TOKEN }}
        with:
          destination_container_repo: stevenmassaro/mortgage-rate-check
          provider: dockerhub
          short_description: ${{ github.event.repository.description }}
          readme_file: 'README.md'
      - name: Determine alpine version
        id: version
        run: echo "VERSION=$(head Dockerfile -n 1 | cut -d ':' -f2 | cut -d " " -f1)" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.ref == 'refs/heads/main' }}
          context: .
          target: production
          tags: |
            stevenmassaro/mortgage-rate-check:latest
            stevenmassaro/mortgage-rate-check:${{ steps.version.outputs.VERSION }}
